set -e

# install npm deps
npm install

# tangram_node
cargo build -p tangram_node
install -D ../../target/debug/libtangram_node.so dist/node/tangram_x86_64-unknown-linux-gnu.node

# tangram_wasm
cargo build --target wasm32-unknown-unknown -p tangram_wasm
wasm=../../target/wasm32-unknown-unknown/debug/tangram_wasm.wasm

# common
npx tsc --module commonjs --outDir dist/node/
mv dist/node/common.js dist/node/common.cjs
mv dist/node/common.js.map dist/node/common.cjs.map
npx tsc --module esnext --outDir dist/web/
npx tsc --module esnext --outDir dist/bundler/
npx tsc --module esnext --outDir dist/node/
cp common.ts dist/deno/common.ts

# web
mkdir -p dist/web/
wasm-bindgen --target web --out-dir dist/web/ $wasm
cp entrypoints/web.js dist/web/index.js

# bundler
mkdir -p dist/bundler/
wasm-bindgen --target bundler --out-dir dist/bundler/ $wasm
cp entrypoints/bundler.js dist/bundler/index.js

# node
mkdir -p dist/node/
wasm-bindgen --target nodejs --out-dir dist/node/ $wasm
mv dist/node/tangram_wasm.js dist/node/tangram_wasm.cjs
cp entrypoints/node.js dist/node/index.js
cp entrypoints/node.cjs dist/node/index.cjs

# deno
mkdir -p dist/deno/
wasm-bindgen --target deno --out-dir dist/deno/ $wasm
cp entrypoints/deno.ts dist/deno/mod.ts
